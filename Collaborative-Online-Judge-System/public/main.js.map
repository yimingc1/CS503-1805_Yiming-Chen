{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tredirectTo: 'problems',\n\t\tpathMatch: 'full' //\n\t},\n\t{\n\t\tpath:'problems',\n\t\tcomponent: ProblemListComponent\n\t},\n\t{\n\t\tpath: 'problems/:id',\n\t\tcomponent: ProblemDetailComponent\n\t},\n\t{\n\t\tpath: '**',\n\t\tredirectTo: 'problems'\n\t}\n\n]\n\nexport const routing = RouterModule.forRoot(routes)","module.exports = \"@media screen { \\n #editor { \\n   height: 600px; \\n } \\n  .lang-select { \\n   width: 100px; \\n   margin-right: 10px; \\n } \\n  header .btn { \\n   margin: 0 5px; \\n } \\n  footer .btn { \\n   margin: 0 5px; \\n } \\n  .editor-footer, .editor-header { \\n   margin: 10px 0; \\n } \\n  .cursor { \\n   /*position:absolute;*/ \\n   background: rgba(0, 250, 0, 0.5); \\n   z-index: 40; \\n   width: 2px!important \\n } \\n}\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <div class=\\\"row\\\">\\n    \\t<!--two way binding-->\\n      <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n        [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n      </select>\\n      <!--reset button -->\\n      <!-- Button trigger modal -->\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n        Reset\\n      </button>\\n\\n      <!-- Modal -->\\n      <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              You will lose current code in the editor, are you sure?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n              (click)=\\\"resetEditor()\\\">Reset</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <div id=\\\"editor\\\">\\n  </div><!-- This is the body -->\\n  \\n  <footer class=\\\"editor-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" \\n      (click)=\\\"submit()\\\">Submit Solution</button>\\n  </footer>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n// import router to get the url\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { CollaborationService } from '../../services/collaboration.service';\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\n\nexport class EditorComponent implements OnInit {\n\teditor: any;\n\tsessionID: string;\n\tpublic languages: string[] = ['Java', 'Python'];\n\tlanguage: string = 'Java';\n\n\tdefaultContent = {\n\t\t'Java': `public class Example {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\t// Type your Java code here\n\t\t\t}\n\t\t}\n\t\t`,\n\t\t'Python': `class Solution:\n\t\t\tdef example():\n\t\t\t\t# write your Python code here`\n\t}\n\n\t// inject collaboration service and route service\n  constructor(private collaboration: CollaborationService, private route: ActivatedRoute) { }\n\n  // use problem id as session id \n  // subscribe to params, so that when it changes, the session id get updated\n  ngOnInit() {\n  \tthis.route.params\n  \t\t.subscribe(params => {\n  \t\t\tthis.sessionID = params['id'];\n  \t\t\tthis.initEditor();\n  \t\t})\n  }\n\n  initEditor(): void {\n  \tthis.editor = ace.edit(\"editor\");\n  \tthis.editor.setTheme(\"ace/theme/eclipse\");\n  \tthis.resetEditor();\n\n  \tdocument.getElementsByTagName('textarea')[0].focus();\n\n  \t// Initialize the connection with backend server.\n  \tthis.collaboration.init(this.editor, this.sessionID);\n\n  \t// track the last local change\n  \tthis.editor.lastAppliedChange = null;\n\n  \t// register change callback, when client change the content in editor \n  \t// \n  \tthis.editor.on('change', (e) => {\n  \t\tconsole.log('editior change: ' + JSON.stringify(e));\n\n  \t\t// check if the change comes from self,\n  \t\t// if not, send the change to collaboration\n  \t\tif(this.editor.lastAppliedChange != e){\n  \t\t\tthis.collaboration.change(JSON.stringify(e));\n  \t\t}\n  \t})\n  }\n\n  resetEditor(): void {\n  \tthis.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase());\n  \tthis.editor.setValue(this.defaultContent[this.language]);\n  }\n\n  setLanguage(language): void {\n  \tthis.language = language;\n  \tthis.resetEditor();\n  }\n\n  submit(): void {\n  \tlet usercode = this.editor.getValue();\n  \tconsole.log(usercode);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    <form #formRef = \\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemName\\\">Problem name</label>\\n        <input name = \\\"problemName\\\" id=\\\"problemName\\\" class=\\\"form-control\\\"\\n          type=\\\"text\\\" required placeholder=\\\"Please enter problem name\\\" \\n          [(ngModel)] = \\\"newProblem.name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDesc\\\">problem description</label>\\n        <textarea name = \\\"problemDesc\\\" id=\\\"problemDesc\\\" class=\\\"form-control\\\"\\n         placeholder=\\\"Please enter problem description\\\" \\n          [(ngModel)] = \\\"newProblem.desc\\\" rows=\\\"3\\\">\\n        </textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n         <label for=\\\"problemDifficulty\\\">Difficulty</label> \\n         <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n         [(ngModel)] = \\\"newProblem.difficulty\\\">\\n          <option *ngFor = \\\"let difficulty of difficulties\\\" [value] = \\\"difficulty\\\">\\n            {{difficulty}}\\n          </option>\\n         </select>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class = \\\"col-md-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n            (click) = \\\"addProblem()\\\"\\n          > Add problem </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <br/>\\n  <br/> \"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n\tid : 0,\n\tname : '',\n\tdesc : '',\n\tdifficulty : 'easy'\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\tnewProblem: Problem = Object.assign({},DEFAULT_PROBLEM) //create new object\n\tdifficulties: string[] = ['easy','medium','hard','super'];\n\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  addProblem(){\n  \tthis.dataService.addProblem(this.newProblem);\n  \tthis.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col - sm - 12 col - md - 4\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<h2>\\n\\t\\t\\t\\t\\t{{problem.id}}. {{problem.name}}\\n\\t\\t\\t\\t</h2>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t\\t{{problem.desc}}\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n\\t\\t\\t<app-editor></app-editor>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service'; \n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n\tproblem:Problem;\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  \tthis.route.params.subscribe(params => {\n  \t\t// this.problem = this.dataService.getProblem(+params['id']); // convert string to integer by adding \"+\"\n      this.dataService.getProblem(+params['id'])\n      .then(problem => this.problem = problem);\n      })\n  \t}\n  }\n","module.exports = \".difficult {\\n\\tmin-width: 65px;\\n\\tmargin-right: 18px;\\n}\\n .badge.difficulty {\\n\\tpadding-top: 0.6em;\\n\\tcolor: #fbfdfa;\\n\\tfont-size: 12px;\\n}\\n .title {\\n\\tfont-size: 1.2em;\\n}\\n .diff-easy {\\n\\tbackground-color: #42ebf4;\\n}\\n .diff-medium {\\n\\tbackground-color: #92cf5c;\\n}\\n .diff-hard {\\n    background-color: #dd0d1e;\\n}\\n .diff-super{\\n\\tbackground-color: #8d16e2;\\n}\"","module.exports = \"<div class = \\\"container\\\">\\n\\t<app-new-problem></app-new-problem>\\n\\t<div class=\\\"list-group\\\">\\n\\t\\t<a class=\\\"list-group-item\\\" *ngFor = \\\"let problem of problems\\\"\\n\\t\\t[routerLink] = \\\"['/problems' , problem.id]\\\">\\n\\t\\t\\t<span class=\\\"{{'pull -left badge difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n\\t\\t\\t\\t{{problem.difficulty}}\\n\\t\\t\\t</span>\\n\\t\\t<strong class=\\\"title\\\" > {{problem.id}}. {{problem.name}}</strong>\\n\\t</a>\\n</div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {Problem} from '../../models/problem.model';\nimport  {DataService} from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  \tproblems: Problem[];\n    subscriptionProblem: Subscription;\n  \n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  \tthis.getProblems();\n  }\n\n  ngOnDestroy(){\n    this.subscriptionProblem.unsubscribe();\n  }\n\n  getProblems(){\n  \t// this.problems = this.dataService.getProblems();\n    this.subscriptionProblem = this.dataService.getProblems()\n    .subscribe(problems => this.problems = problems);\n  }\n}\n","import { Injectable } from '@angular/core';\n\ndeclare var io: any; // reference the io object in socket.io\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n\tcollaborationSocket: any;\n\n  constructor() { }\n  \n  // take two parameters\n  init(editor: any, sessionID: string): void {\n  \t// window.location.origin is the server location of the current page, i.e. the domain name.\n  \t// {query: 'sessionID= ' + sessionID} is the connection message. e.g. /problem/1\n  \t// when handshake happens, pass the sessionID to the server, attach it with sockectID\n  \t// each open browser has unique socketID\n  \tthis.collaborationSocket = io(window.location.origin, { query: 'sessionID=' + sessionID});\n\n  \t// wait for the change event\n  \t// when connected, run the callback func to response with message.\n  \tthis.collaborationSocket.on('change', (delta: string) => {\n  \t\tconsole.log('collaboration: editor changes ' + delta);\n  \t\tdelta = JSON.parse(delta);\n  \t\t\n  \t\t// record the last applied change from the server by other client\n  \t\teditor.lastAppliedChange = delta;\n  \t\teditor.getSession().getDocument().applyDeltas([delta]);\n  \t})\n  }\n\n  change(delta: string): void {\n  \t// emit the change evnet\n  \tthis.collaborationSocket.emit('change', delta);\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { Problem } from '../models/problem.model';\n// import { PROBLEMS} from '../mock-problems';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Problem } from '../models/problem.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n\t// problems: Problem[] = PROBLEMS;\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private httpClient: HttpClient) { };\n\n  // getProblems(): Problem[] { \n  // \treturn this.problems;\n  // }\n\n  // getProblem(id: Number): Problem {\n  // \treturn this.problems.find((problem) => problem.id === id);\n  // }\n\n  // addProblem(problem: Problem){\n  // \tproblem.id = this.problems.length + 1;\n  // \tthis.problems.push(problem);\n  // }\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res)\n      })\n      .catch(this.handleError);\n\n      return this._problemSource.asObservable();\n  }\n\n  getProblem(id: Number): Promise<Problem>{\n    return this.httpClient.get(`/api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = { headers: new HttpHeaders({ 'Content-Type': 'application/json'})};\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}